// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: service.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateHabitRequest is the message sent to create a habit.
type CreateHabitRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the new habit. Cannot be empty.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Frequency of the new habit. Defaults to once per week.
	WeeklyFrequency *int32 `protobuf:"varint,2,opt,name=weekly_frequency,json=weeklyFrequency,proto3,oneof" json:"weekly_frequency,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateHabitRequest) Reset() {
	*x = CreateHabitRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHabitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHabitRequest) ProtoMessage() {}

func (x *CreateHabitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHabitRequest.ProtoReflect.Descriptor instead.
func (*CreateHabitRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateHabitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHabitRequest) GetWeeklyFrequency() int32 {
	if x != nil && x.WeeklyFrequency != nil {
		return *x.WeeklyFrequency
	}
	return 0
}

// CreateHabitResponse is the response of the create endpoint.
type CreateHabitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Habit         *Habit                 `protobuf:"bytes,1,opt,name=habit,proto3" json:"habit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHabitResponse) Reset() {
	*x = CreateHabitResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHabitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHabitResponse) ProtoMessage() {}

func (x *CreateHabitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHabitResponse.ProtoReflect.Descriptor instead.
func (*CreateHabitResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHabitResponse) GetHabit() *Habit {
	if x != nil {
		return x.Habit
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x06habits\x1a\vhabit.proto\"m\n" +
	"\x12CreateHabitRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x10weekly_frequency\x18\x02 \x01(\x05H\x00R\x0fweeklyFrequency\x88\x01\x01B\x13\n" +
	"\x11_weekly_frequency\":\n" +
	"\x13CreateHabitResponse\x12#\n" +
	"\x05habit\x18\x01 \x01(\v2\r.habits.HabitR\x05habit2P\n" +
	"\x06Habits\x12F\n" +
	"\vCreateHabit\x12\x1a.habits.CreateHabitRequest\x1a\x1b.habits.CreateHabitResponseB\x14Z\x12learngo/habits/apib\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_service_proto_goTypes = []any{
	(*CreateHabitRequest)(nil),  // 0: habits.CreateHabitRequest
	(*CreateHabitResponse)(nil), // 1: habits.CreateHabitResponse
	(*Habit)(nil),               // 2: habits.Habit
}
var file_service_proto_depIdxs = []int32{
	2, // 0: habits.CreateHabitResponse.habit:type_name -> habits.Habit
	0, // 1: habits.Habits.CreateHabit:input_type -> habits.CreateHabitRequest
	1, // 2: habits.Habits.CreateHabit:output_type -> habits.CreateHabitResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_habit_proto_init()
	file_service_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
